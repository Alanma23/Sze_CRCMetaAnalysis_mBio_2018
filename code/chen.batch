#!bash

#Load needed R
module load R/3.3.3
module load sratoolkit/2.7.0
tempMothur=/nfs/turbo/schloss-lab/msze/axiom_home_stuff/bin/mothurV1.39.3/mothur/mothur
DOWNDIR=data/raw/chen
WORKDIR=data/process/chen
REF=data/references

# Need to add in a bunch of stuff on the study and what they were looking for.
# Might adjust parameters to those set by authors of original manuscript
# (Chen, W et al 2012).  The SRA project ID is SRP009633. 
# Need 150GB of RAM to run through

# Download the data set
wget -r -q -np -nd -k -P $DOWNDIR ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP009/SRP009633/

# Convert to fasta files that will be used
for sample in $DOWNDIR/*.sra
do
	fastq-dump $sample -O $WORKDIR

done

# create olio files
 R -e "source('code/make_chen_olig_info.R')"


# pull out sample info and seq labeling for each data set
$tempMothur "#fastq.info(fastq=$WORKDIR/SRR389090.fastq);
	trim.seqs(fasta=current, qfile=current, oligos=$WORKDIR/run1.oligos, bdiffs=2, checkorient=t, minlength=200, qwindowaverage=35, qwindowsize=50, processors=4)"

$tempMothur "#fastq.info(fastq=$WORKDIR/SRR389091.fastq);
	trim.seqs(fasta=current, qfile=current, oligos=$WORKDIR/run2.oligos, bdiffs=2, checkorient=t, minlength=200, qwindowaverage=35, qwindowsize=50, processors=4)"


# Remove uneeded files
rm $DOWNDIR/*html*
rm $DOWNDIR/*sra*

# Combined the two fasta and group files together

cat $WORKDIR/SRR389090.trim.fasta $WORKDIR/SRR389091.trim.fasta > $WORKDIR/combined.fasta
cat $WORKDIR/SRR389090.groups $WORKDIR/SRR389091.groups > $WORKDIR/combined.groups


# Run mothur for sequencing processing on combined file
$tempMothur "#summary.seqs(fasta=$WORKDIR/combined.fasta, processors=4);
	unique.seqs(fasta=current);
	align.seqs(fasta=current, reference=$REF/silva.seed.align, flip=T);
	count.seqs(name=current, group=$WORKDIR/combined.groups);
	summary.seqs(fasta=current, count=current)"
#	screen.seqs(fasta=current, count=current, start=6322, optimize=end, criteria=95, maxambig=0, maxhomop=8);
#	filter.seqs(fasta=current, vertical=T, trump=.);
#	unique.seqs(fasta=current, count=current);
#	summary.seqs(fasta=current, count=current)
#	pre.cluster(fasta=current, count=current, diffs=2);
#	chimera.uchime(fasta=current, count=current, dereplicate=t);
#	remove.seqs(fasta=current, accnos=current);
#	classify.seqs(fasta=current, count=current, reference=$REF/trainset14_032015.pds.fasta, taxonomy=$REF/trainset14_032015.pds.tax, cutoff=80);
#	remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota);
#	cluster.split(fasta=current, count=current, taxonomy=current, method=opti, metric=mcc, taxlevel=5, cutoff=0.03);
#	make.shared(list=current, count=current, label=0.03);
#	classify.otu(list=current, count=current, taxonomy=current, label=0.03);
#	get.oturep(fasta=current, count=current, list=current, label=0.03, method=abundance);
#	count.groups()"

# Match metadata with the shared file
#R -e "source('code/lu.R')"

#$tempMothur "#sub.sample(shared=$WORKDIR/lu.shared, size=5000, label=0.03);
#	dist.shared(shared=$WORKDIR/lu.shared, calc=braycurtis, label=0.03, subsample=5000, iters=100, processors=4);
#	summary.single(shared=$WORKDIR/lu.shared, calc=nseqs-sobs-shannon-shannoneven, subsample=5000)"


#mv $WORKDIR/*.cons.taxonomy $WORKDIR/lu.taxonomy
#mv $WORKDIR/*0.03.rep.fasta $WORKDIR/lu.rep.seqs

#rm $WORKDIR/*.contigs.*
#rm $WORKDIR/*rabund
#rm $WORKDIR/*.fastq
#rm $WORKDIR/*.filter

