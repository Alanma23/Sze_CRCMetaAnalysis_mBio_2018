#!bash

#Load needed R
module load R/3.3.2

DOWNDIR=data/raw/burns
WORKDIR=data/process/burns
REF=data/references
mothurRv=/mnt/EXT/Schloss-data/bin/mothur

# Download the data set
wget -r -q -np -nd -k -P $DOWNDIR ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP058/SRP058492/

# Convert to fasta files that will be used
for sample in $DOWNDIR/*.sra
do
	fastq-dump --split-files $sample -O $WORKDIR

done

# Make a files file for mothur using bash commands
#Get read 1 fastq
ls $WORKDIR/*_1.fastq > $WORKDIR/read1.txt
# Get read 2 fastq
ls $WORKDIR/*_2.fastq > $WORKDIR/read2.txt
# Get Names to be used
ls $WORKDIR/*_1.fastq | cut -c20-29 > $WORKDIR/names.txt
#Combine everything together
paste -d '\t' $WORKDIR/names.txt $WORKDIR/read1.txt $WORKDIR/read2.txt > $WORKDIR/burns.files


# Run mothur for sequencing processing on combined file
$mothurRv "#make.contigs(file=$WORKDIR/burns.files, processors=3);
	summary.seqs(fasta=current);
	screen.seqs(fasta=current, group=current, maxhomop=8, minlength=200);
	unique.seqs(fasta=current);
	count.seqs(name=current, group=current);
	align.seqs(fasta=current, reference=$REF/silva.seed.align);
	summary.seqs(fasta=current, count=current);
	screen.seqs(fasta=current, count=current, summary=current, start=22583, end=34341);
	filter.seqs(fasta=current, vertical=T, trump=.);
	unique.seqs(fasta=current, count=current);
	summary.seqs(fasta=current, count=current)
	pre.cluster(fasta=current, count=current, diffs=3);
	chimera.vsearch(fasta=current, count=current, dereplicate=t);
	remove.seqs(fasta=current, accnos=current);
	classify.seqs(fasta=current, count=current, reference=$REF/trainset14_032015.pds.fasta, taxonomy=$REF/trainset14_032015.pds.tax, cutoff=80);
	remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)
	cluster.split(fasta=current, count=current, taxonomy=current, method=opti, metric=mcc, taxlevel=5, cutoff=0.03);
	make.shared(list=current, count=current, label=0.03);
	classify.otu(list=current, count=current, taxonomy=current, label=0.03);
	get.oturep(fasta=current, count=current, list=current, label=0.03, method=abundance)"

# Match metadata with the shared file
#R -e "source('code/geng.R')"

#mothur "#sub.sample(shared=$WORKDIR/geng.shared, label=0.03);
#	dist.shared(shared=$WORKDIR/geng.shared, calc=braycurtis, label=0.03, subsample=T, iters=100, processors=8);
#	summary.single(shared=$WORKDIR/geng.shared, calc=nseqs-sobs-shannon-shannoneven, subsample=T)"

#mv $WORKDIR/*.cons.taxonomy $WORKDIR/geng.taxonomy
#mv $WORKDIR/*0.03.rep.fasta $WORKDIR/geng.rep.seqs

#rm $WORKDIR/combined.*
#rm $WORKDIR/*rabund





