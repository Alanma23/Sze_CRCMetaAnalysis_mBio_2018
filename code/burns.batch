#!bash

#Load needed R
module load R/3.3.0

DOWNDIR=data/raw/burns
WORKDIR=data/process/burns
REF=data/references
mothurRv=/mnt/EXT/Schloss-data/bin/mothur

# Need to add in a bunch of stuff on the study and what they were looking for.
# Might adjust parameters to those set by authors of original manuscript
# (Geng, J et al 2013).  mothur default for 454 allowed only an average of
# 855 sequence per sample. Author method leave ~1,190 sequences per sample. 
# The SRA project ID is SRP016877.

# Download the data set
#wget -r -q -np -nd -k -P $DOWNDIR ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP058/SRP058492/

# Convert to fasta files that will be used
#for sample in $DOWNDIR/*.sra
#do
	#fastq-dump $sample -O $WORKDIR
#	fastq-dump --split-files $sample -O $WORKDIR
	#fastq=${sample//.sra/_1.fastq}
	#fastq=${fastq//raw/process}

	#mothur "#fastq.info(fastq=$fastq);
	#	trim.seqs(fasta=current, qfile=current, maxambig=0, maxhomop=8, minlength=200, qwindowaverage=35, qwindowsize=50, processors=8)"
	
	#rm *logfile
#done

# Combined the seperate fasta files  to one file
#cat $WORKDIR/*trim.fasta > $WORKDIR/combined.fasta

# Create a group file
#grep '^>' $WORKDIR/combined.fasta | cut -c 2- > $WORKDIR/header.txt
#sed 's/\..*//g' $WORKDIR/header.txt > $WORKDIR/group.txt
#paste --delimiters='\t' $WORKDIR/header.txt $WORKDIR/group.txt > $WORKDIR/combined.groups

# Remove unessary files
#rm -f $WORKDIR/*.fastq $WORKDIR/*.scrap.* $WORKDIR/*.trim.* $WORKDIR/SRR*fasta $WORKDIR/SRR*qual $WORKDIR/header.txt $WORKDIR/group.txt


# Run mothur for sequencing processing on combined file
#$mothurRv "#make.file(inputdir=$WORKDIR);
#	make.contigs(file=$WORKDIR/stability.files, processors=4);
#	summary.seqs(fasta=current);
#	screen.seqs(fasta=current, group=current, minlength=200);
#	unique.seqs(fasta=current);
#$mothurRv "#align.seqs(fasta=$WORKDIR/stability.trim.contigs.good.unique.fasta, reference=$REF/silva.seed.align, flip=T, processors=4);
#	count.seqs(name=$WORKDIR/stability.trim.contigs.good.names, group=$WORKDIR/stability.contigs.good.groups);
#$mothurRv "#summary.seqs(fasta=$WORKDIR/stability.trim.contigs.good.unique.align, count=$WORKDIR/stability.trim.contigs.good.count_table, processors=4)"	

#$mothurRv "#screen.seqs(fasta=$WORKDIR/stability.trim.contigs.good.unique.align, count=$WORKDIR/stability.trim.contigs.good.count_table, summary=$WORKDIR/stability.trim.contigs.good.unique.summary, start=22583, end=34336, maxlength=300, maxhomop=8, processors=4);
#	filter.seqs(fasta=current, vertical=T, trump=.);
#	unique.seqs(fasta=current, count=current);
#	summary.seqs(fasta=current, count=current)"

#$mothurRv "#pre.cluster(fasta=$WORKDIR/stability.trim.contigs.good.unique.good.filter.unique.fasta, count=$WORKDIR/stability.trim.contigs.good.unique.good.filter.count_table, diffs=3)"
$mothurRv "#chimera.uchime(fasta=$WORKDIR/stability.trim.contigs.good.unique.good.filter.unique.precluster.fasta, count=$WORKDIR/stability.trim.contigs.good.unique.good.filter.unique.precluster.count_table, dereplicate=t);
#	remove.seqs(fasta=current, accnos=current);
#	classify.seqs(fasta=current, count=current, reference=$REF/trainset14_032015.pds.fasta, taxonomy=$REF/trainset14_032015.pds.tax, cutoff=80);
#	remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)"

#	cluster.split(fasta=current, count=current, taxonomy=current, splitmethod=classify, taxlevel=5, cutoff=0.15);
#	make.shared(list=current, count=current, label=0.03);
#	classify.otu(list=current, count=current, taxonomy=current, label=0.03);
#	get.oturep(fasta=current, count=current, list=current, label=0.03, method=abundance)"

# Match metadata with the shared file
#R -e "source('code/geng.R')"

#mothur "#sub.sample(shared=$WORKDIR/geng.shared, label=0.03);
#	dist.shared(shared=$WORKDIR/geng.shared, calc=braycurtis, label=0.03, subsample=T, iters=100, processors=8);
#	summary.single(shared=$WORKDIR/geng.shared, calc=nseqs-sobs-shannon-shannoneven, subsample=T)"

#mv $WORKDIR/*.cons.taxonomy $WORKDIR/geng.taxonomy
#mv $WORKDIR/*0.03.rep.fasta $WORKDIR/geng.rep.seqs

#rm $WORKDIR/combined.*
#rm $WORKDIR/*rabund





