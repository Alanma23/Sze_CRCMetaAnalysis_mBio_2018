#!bash

#Load needed R
module load R/3.3.0
mothurRv=/mnt/EXT/Schloss-data/bin/mothur
DOWNDIR=data/raw/geng
WORKDIR=data/process/geng
REF=data/references

# Need to add in a bunch of stuff on the study and what they were looking for.
# Might adjust parameters to those set by authors of original manuscript
# (Geng, J et al 2013).  mothur default for 454 allowed only an average of
# 855 sequence per sample. Author method leave ~1,190 sequences per sample. 
# The SRA project ID is SRP016877.

# Download the data set
wget -r -q -np -nd -k -P $DOWNDIR ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP016/SRP016877/

# Convert to fasta files that will be used
for sample in $DOWNDIR/*.sra
do
	fastq-dump $sample -O $WORKDIR
	fastq=${sample//sra/fastq}
	fastq=${fastq//raw/process}

	mothur "#fastq.info(fastq=$fastq);
		trim.seqs(fasta=current, qfile=current, maxambig=0, maxhomop=8, qwindowaverage=25, qwindowsize=50, processors=8)"

	rm *logfile
done

# Combined the seperate fasta files  to one file
cat $WORKDIR/*trim.fasta > $WORKDIR/combined.fasta

# Create a group file
grep '^>' $WORKDIR/combined.fasta | cut -c 2- > $WORKDIR/header.txt
sed 's/\..*//g' $WORKDIR/header.txt > $WORKDIR/group.txt
paste --delimiters='\t' $WORKDIR/header.txt $WORKDIR/group.txt > $WORKDIR/combined.groups

# Remove unessary files
rm -f $WORKDIR/*.fastq $WORKDIR/*.scrap.* $WORKDIR/*.trim.* $WORKDIR/SRR*fasta $WORKDIR/SRR*qual $WORKDIR/header.txt $WORKDIR/group.txt

# Run mothur for sequencing processing on combined file
$mothurRv "#unique.seqs(fasta=$WORKDIR/combined.fasta);
	align.seqs(fasta=current, reference=$REF/silva.seed.align, flip=T, processors=8);
	count.seqs(name=current, group=$WORKDIR/combined.groups);
	summary.seqs(fasta=current, count=current);
	screen.seqs(fasta=$WORKDIR/combined.unique.align, count=$WORKDIR/combined.count_table, start=1046, optimize=end, criteria=95, minlength=200, maxhomop=8, processors=8);
	filter.seqs(fasta=current, vertical=T, trump=.);
	unique.seqs(fasta=current, count=current);
	summary.seqs(fasta=current, count=current);
	pre.cluster(fasta=current, count=current, diffs=2);
	chimera.vsearch(fasta=current, count=current, dereplicate=t);
	remove.seqs(fasta=current, accnos=current);
	classify.seqs(fasta=current, count=current, reference=$REF/trainset14_032015.pds.fasta, taxonomy=$REF/trainset14_032015.pds.tax, cutoff=80);
	remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota);
	cluster.split(fasta=current, count=current, taxonomy=current, method=opti, metric=mcc, taxlevel=5, cutoff=0.03);
	make.shared(list=current, count=current, label=0.03);
	count.groups(shared=current);
	classify.otu(list=current, count=current, taxonomy=current, label=0.03);
	get.oturep(fasta=current, count=current, list=current, label=0.03, method=abundance)"

# Match metadata with the shared file
R -e "source('code/geng.R')"

$mothurRv "#sub.sample(shared=$WORKDIR/geng.shared, label=0.03);
	dist.shared(shared=$WORKDIR/geng.shared, calc=braycurtis, label=0.03, subsample=T, iters=100, processors=8);
	summary.single(shared=$WORKDIR/geng.shared, calc=nseqs-sobs-shannon-shannoneven, subsample=T)"

mv $WORKDIR/*.cons.taxonomy $WORKDIR/geng.taxonomy
mv $WORKDIR/*0.03.rep.fasta $WORKDIR/geng.rep.seqs

rm $WORKDIR/combined.*
rm $WORKDIR/*rabund





