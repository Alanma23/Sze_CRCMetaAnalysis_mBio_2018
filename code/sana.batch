#!bash

# Load needed R
module load R/3.3.3
tempMothur=/nfs/turbo/pschloss/msze/axiom_home_stuff/bin/mothurV1.39.3/mothur/mothur
DOWNDIR=data/raw/sanapareddy
WORKDIR=data/process/sanapareddy
REF=data/references


# Need to add a preamble about the data set and what it encompasses.
# Also need to add author information and other such stuff.
# e.g. type of sequencer used and other such data

# Downloading files from git repo moving to appropriate directory
git clone https://github.com/afodor/adenomasRelease.git $DOWNDIR
mv $DOWNDIR/caseControlTwoColumn.txt $WORKDIR
mv $DOWNDIR/fasta/* $DOWNDIR
rm -r $DOWNDIR/fasta
rm -rf $DOWNDIR/.git

# Unzip files and move to workdir
gunzip $DOWNDIR/*.gz

# Add fasta suffix to all unziped files
find $DOWNDIR -type f -exec mv '{}' '{}'.fasta \;

# Trim files so only unique sequence ID is left
for sample in $DOWNDIR/*.fasta
do
	new_name=${sample//.fasta/_noextra.fasta}
	sed 's/\s.*$//' $sample > $new_name

done

# Replace all "-" with "_" in the metadata file
sed 's/\-/_/g' $WORKDIR/caseControlTwoColumn.txt > $WORKDIR/sequence_group_data.txt


# add group names to unique seqs ID
for sample in $DOWNDIR/*noextra.fasta
do
	new_group=${sample//_noextra.fasta/_final.fasta}
	final_name=${new_group//data\/raw\/sanapareddy\//}

	sed "/>/s|$|_${final_name}|" $sample | sed 's/\-/_/g' | sed 's/_final\.fasta//g' > $new_group

done

# Combined the seperate fasta files  to one file
cat $DOWNDIR/*final.fasta > $DOWNDIR/combined.fasta
mv $DOWNDIR/combined.fasta $WORKDIR/combined.fasta

# Create a group file
grep '^>' $WORKDIR/combined.fasta | cut -c 2- > $WORKDIR/header.txt
grep '^>' $WORKDIR/combined.fasta | cut -c 17- > $WORKDIR/group.txt
paste --delimiters='\t' $WORKDIR/header.txt $WORKDIR/group.txt > $WORKDIR/combined.groups

rm $WORKDIR/header.txt $WORKDIR/group.txt

# Run mothur on the combined file
$tempMothur "#unique.seqs(fasta=$WORKDIR/combined.fasta);
	count.seqs(name=current, group=$WORKDIR/combined.groups);
	summary.seqs(fasta=current, count=current);
	align.seqs(fasta=current, reference=$REF/silva.seed.align, flip=T);
	summary.seqs(fasta=current, count=current)"

#	#	;
#	;
#	;
#	align.seqs(fasta=$WORKDIR/combined.trim.unique.fasta, reference=$REF/silva.seed.align, flip=T, processors=8);
#	summary.seqs(fasta=current, count=$WORKDIR/combined.trim.count_table);
#	screen.seqs(fasta=$WORKDIR/combined.trim.unique.align, count=$WORKDIR/combined.trim.count_table, summary=$WORKDIR/combined.trim.unique.summary, end=13862, optimize=start, criteria=95, minlength=200, maxhomop=8, processors=8);
#	filter.seqs(fasta=$WORKDIR/combined.trim.unique.good.align, vertical=T, trump=.);
#	unique.seqs(fasta=current, count=current);
#	summary.seqs(fasta=current, count=current);
#	pre.cluster(fasta=$WORKDIR/combined.trim.unique.good.filter.unique.fasta, count=$WORKDIR/combined.trim.unique.good.filter.count_table, diffs=2);
#	chimera.uchime(fasta=$WORKDIR/combined.trim.unique.good.filter.unique.precluster.fasta, count=$WORKDIR/combined.trim.unique.good.filter.unique.precluster.count_table, dereplicate=t, processors=8);
#	remove.seqs(fasta=current, accnos=current);
#	summary.seqs(fasta=current, count=current);
#	classify.seqs(fasta=$WORKDIR/combined.trim.unique.good.filter.unique.precluster.pick.fasta, count=$WORKDIR/combined.trim.unique.good.filter.unique.precluster.denovo.uchime.pick.count_table, reference=$REF/trainset14_032015.pds.fasta, taxonomy=$REF/trainset14_032015.pds.tax, cutoff=80, processors=8);
#	remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota);
#	cluster.split(fasta=current, count=current, taxonomy=current, splitmethod=classify, taxlevel=4, cutoff=0.15);
#	make.shared(list=current, count=current, label=0.03);
#	classify.otu(list=current, count=current, taxonomy=current, label=0.03);
#	get.oturep(fasta=current, count=current, list=current, label=0.03, method=abundance);
#	count.groups();"

#R -e "source('code/brim.R')"

#mothur "#sub.sample(shared=$WORKDIR/brim.shared, label=0.03);
#	dist.shared(shared=$WORKDIR/brim.shared, calc=braycurtis, label=0.03, subsample=T, iters=100, processors=8);
#	summary.single(shared=$WORKDIR/brim.shared, calc=nseqs-sobs-shannon-shannoneven, subsample=T)"

#mv $WORKDIR/*.cons.taxonomy $WORKDIR/brim.taxonomy
#mv $WORKDIR/*0.03.rep.fasta $WORKDIR/brim.rep.seqs

#rm $WORKDIR/combined.*
#rm $WORKDIR/*rabund
#rm $WORKDIR/*.fastq




