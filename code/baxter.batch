#!bash

#Load needed R
module load R/3.3.0

DOWNDIR=data/raw/baxter
WORKDIR=data/process/baxter
REF=data/references

# Need to add in a bunch of stuff on the study and what they were looking for.
# Might adjust parameters to those set by authors of original manuscript
# (Baxter, N et al 2016).  The SRA project ID is SRP062005.

# Download the repository and keep only needed files

git clone https://github.com/SchlossLab/Baxter_glne007Modeling_GenomeMed_2015.git $WORKDIR/
rm -rf $WORKDIR/*.docx $WORKDIR/*.md $WORKDIR/Makefile $WORKDIR/*.Rmd $WORKDIR/*.csl $WORKDIR/*bibtex $WORKDIR/.gitignore $WORKDIR/.Rprofile $WORKDIR/.git
rm -r $WORKDIR/results

mv $WORKDIR/data/metadata.tsv $WORKDIR/
mv $WORKDIR/data/glne007.files $WORKDIR/

rm -r $WORKDIR/data
rm -r $WORKDIR/code


# Download the data set
wget -r -q -np -nd -k -P $DOWNDIR ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP062/SRP062005/

# Convert to fasta files that will be used
for sample in $DOWNDIR/*.sra
do
	fastq-dump --split-files $sample -O $WORKDIR

done


# Run mothur for sequencing processing on combined file
mothur "#make.contigs(file=$WORKDIR/glne007.files);
	summary.seqs(fasta=current);
	screen.seqs(fasta=$WORKDIR/glne007.trim.contigs.fasta, group=$WORKDIR/qlne007.contigs..groups, maxambig=0, maxlength=275);
	summary.seqs(fasta=current);
	unique.seqs(fasta=current);
	count.seqs(name=current, group=current)
	align.seqs(fasta=current, reference=$REF/silva.v4.fasta);
	summary.seqs(fasta=current, count=current);
	screen.seqs(fasta=current, count=current, start=1968, end=11550, maxhomop=8);
	filter.seqs(fasta=current, vertical=T, trump=.);
	unique.seqs(fasta=current, count=current);
	summary.seqs(fasta=current, count=current);
	pre.cluster(fasta=current, count=current, diffs=2);
	chimera.uchime(fasta=current, count=current, dereplicate=t);
	remove.seqs(fasta=current, accnos=current);
	classify.seqs(fasta=current, count=current, reference=$REF/trainset14_032015.pds.fasta, taxonomy=$REF/trainset14_032015.pds.tax, cutoff=80);
	remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota);
	get.groups(fasta=$WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, count=$WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.count_table, taxonomy=$WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.taxonomy, groups=mock1-mock2-mock5-mock6-mock7)
	system(mv $WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta $WORKDIR/mocks.final.fasta)
	system(mv $WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.pick.count_table $WORKDIR/mocks.final.counts)
	system(mv $WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy $WORKDIR/mocks.final.taxonomy)
	remove.groups(fasta=$WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, count=$WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.count_table, taxonomy=$WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.taxonomy, groups=mock1-mock2-mock5-mock6-mock7)
	system(mv $WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta $WORKDIR/glne007.final.fasta)
	system(mv $WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.pick.count_table $WORKDIR/glne007.final.counts)
	system(mv $WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy $WORKDIR/glne007.final.taxonomy)
	cluster.split(fasta=$WORKDIR/glne007.final.fasta, count=$WORKDIR/glne007.final.counts, taxonomy=$WORKDIR/glne007.final.taxonomy, splitmethod=classify, taxlevel=5, cutoff=0.15);
	make.shared(list=$WORKDIR/glne007.final.an.unique_list.list, count=$WORKDIR/glne007.final.counts, label=0.03);
	classify.otu(list=current, count=current, taxonomy=current, label=0.03);
	get.oturep(fasta=$WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, count=$WORKDIR/glne007.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.count_table, list=$WORKDIR/glne007.final.an.unique_list.list, label=0.03, method=abundance)"




# Match metadata with the shared file
R -e "source('code/baxter.R')"

# Use mothur to generate the summary statistic data needed
mothur "#sub.sample(shared=$WORKDIR/baxter.shared, label=0.03);
	dist.shared(shared=$WORKDIR/baxter.shared, calc=braycurtis, label=0.03, subsample=T, iters=100, processors=8);
	summary.single(shared=$WORKDIR/baxter.shared, calc=nseqs-sobs-shannon-shannoneven, subsample=T)"

mv $WORKDIR/*.cons.taxonomy $WORKDIR/baxter.taxonomy
mv $WORKDIR/*0.03.rep.fasta $WORKDIR/baxter.rep.seqs

# Remove uneccesary files
rm $WORKDIR/glne007.*
rm $WORKDIR/*.fastq
rm $WORKDIR/*.rabund






