#!bash

#Load needed R
module load R/3.3.0

DOWNDIR=data/raw/weir
WORKDIR=data/process/weir
REF=data/references

# Need to add in a bunch of stuff on the study and what they were looking for.
# Might adjust parameters to those set by authors of original manuscript
# (Weir, TL et al 2013).  mothur default removed too many sequences and left
# low sequence per sample. Author method for qvalue increased this amount. 
# The corresponding author was contacted directly for the raw sequence data.
# Can download using wget from dropbox

# Download and unzip the data set
#wget -O $DOWNDIR/weir.zip https://www.dropbox.com/sh/d35oug6b2k7blcx/AACSx4aPKIF1RCbB3r1koqwSa?dl=1
	#might need to use a username and password if so use below
		#wget -O $DOWNDIR/weir.zip  https://www.dropbox.com/sh/d35oug6b2k7blcx/AACSx4aPKIF1RCbB3r1koqwSa?dl=1
#unzip -d $DOWNDIR -o $DOWNDIR/weir.zip 1.TCA.454Reads.fna 1.TCA.454Reads.qual 2.TCA.454Reads.fna 2.TCA.454Reads.qual

# Trim the sequences and then combine the group and fasta files together
#for sample in $(ls $DOWNDIR/*.fna)
#do
#	QUAL=${sample//fna/qual}
#	OLIGOI=${sample//fna/oligos}
#	OLIGO=${OLIGOI//raw/process}
#
#	mothur "#trim.seqs(fasta=$sample, oligos=$OLIGO, qfile=$QUAL, maxambig=0, maxhomop=8, qwindowaverage=25, qwindowsize=50, bdiffs=1, processors=8)"
#	rm *logfile
#done

#cat $DOWNDIR/*.trim.fasta > $WORKDIR/combined.fasta
#cat $DOWNDIR/*.groups > $WORKDIR/combined.groups



# Run mothur for sequencing processing on combined file
mothur "#unique.seqs(fasta=$WORKDIR/combined.fasta);
	align.seqs(fasta=current, reference=$REF/silva.seed.align, flip=T, processors=8);
	count.seqs(name=current, group=$WORKDIR/combined.groups);
	summary.seqs(fasta=current, count=current)"
#	screen.seqs(fasta=$WORKDIR/combined.unique.align, count=$WORKDIR/combined.count_table, start=1046, optimize=end, criteria=95, minlength=200, maxhomop=8, processors=8);
#	filter.seqs(fasta=current, vertical=T, trump=.);
#	unique.seqs(fasta=current, count=current);
#	summary.seqs(fasta=current, count=current);
#	pre.cluster(fasta=current, count=current, diffs=2);
#	chimera.uchime(fasta=current, count=current, dereplicate=t);
#	remove.seqs(fasta=current, accnos=current);
#	classify.seqs(fasta=current, count=current, reference=$REF/trainset14_032015.pds.fasta, taxonomy=$REF/trainset14_032015.pds.tax, cutoff=80);
#	remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota);
#	cluster.split(fasta=current, count=current, taxonomy=current, splitmethod=classify, taxlevel=5, cutoff=0.15);
#	make.shared(list=current, count=current, label=0.03);
#	classify.otu(list=current, count=current, taxonomy=current, label=0.03);
#	get.oturep(fasta=current, count=current, list=current, label=0.03, method=abundance)"

# Match metadata with the shared file
#R -e "source('code/geng.R')"

#mothur "#sub.sample(shared=$WORKDIR/geng.shared, label=0.03);
#	dist.shared(shared=$WORKDIR/geng.shared, calc=braycurtis, label=0.03, subsample=T, iters=100, processors=8);
#	summary.single(shared=$WORKDIR/geng.shared, calc=nseqs-sobs-shannon-shannoneven, subsample=T)"

#mv $WORKDIR/*.cons.taxonomy $WORKDIR/geng.taxonomy
#mv $WORKDIR/*0.03.rep.fasta $WORKDIR/geng.rep.seqs

#rm $WORKDIR/combined.*
#rm $WORKDIR/*rabund





